# Maintainer: Giancarlo Razzolini <grazzolini@archlinux.org>
# Maintainer: Frederik Schwan <freswa at archlinux dot org>
# Contributor:  Bart≈Çomiej Piotrowski <bpiotrowski@archlinux.org>
# Contributor: Allan McRae <allan@archlinux.org>
# Contributor: Daniel Kozak <kozzi11@gmail.com>

# toolchain build order: linux-api-headers->glibc->binutils->gcc->glibc->binutils->gcc
# NOTE: libtool requires rebuilt with each new gcc version

# ALARM: Kevin Mihelich <kevin@archlinuxarm.org>
#  - removed ada packages
#  - removed gnat (ada stuff) from gcc packaging
#  - disabled make check, too much stress, kills plugs :(
#  - specifid build host, disabled distcc
#  - replaced bugurl with our GitHub issue page

noautobuild=1

pkgname=(lib32-gcc lib32-gcc-libs lib32-gcc-fortran lib32-gcc-objc)
pkgver=14.2.1+
_commit=1cd744a6828f6ab9179906d16434ea40b6404737
pkgrel=1
pkgdesc='The GNU Compiler Collection'
arch=(x86_64)
license=(GPL-3.0-with-GCC-exception GFDL-1.3-or-later)
url='https://gcc.gnu.org'
makedepends=(binutils libmpc doxygen python git libxcrypt zstd)
checkdepends=(dejagnu inetutils tcl expect python-pytest)
makedepends=(
  binutils
  doxygen
  gcc-d
  git
  libisl
  libmpc
  python
  rust
  zstd
)
checkdepends=(
  dejagnu
  expect
  inetutils
  python-pytest
  tcl
)
options=(!emptydirs !lto !distcc)
_libdir=usr/lib32/gcc/armv7l-linux-gnueabihf/${pkgver%%+*}
source=(git+https://sourceware.org/git/gcc.git#commit=${_commit}
        c89 c99
        gcc-ada-repro.patch
        gcc-objc-include-lib-path-fix.patch
        config-Fix-rdynamic-detection-for-libcc1-usage.patch
)
validpgpkeys=(F3691687D867B81B51CE07D9BBE43771487328A9  # bpiotrowski@archlinux.org
              86CFFCA918CF3AF47147588051E8B148A9999C34  # foutrelis@archlinux.org
              13975A70E63C361C73AE69EF6EEB81F8981C74C7  # richard.guenther@gmail.com
              D3A93CAD751C2AF4F8C7AD516C35B99309B5FA62) # Jakub Jelinek <jakub@redhat.com>
sha256sums=('33378643f1c72686181f9d3fcd09caf9b06815324467f5dc9b9a3ea41cfba4b4'
            '7b09ec947f90b98315397af675369a1e3dfc527fa70013062e6e85c4be0275ab'
            '44ea973558842f3f4bd666bdaf6e810fd7b7c7bd36b5cc4c69f93d2cd0124fc7'
            '1773f5137f08ac1f48f0f7297e324d5d868d55201c03068670ee4602babdef2f'
            '014ff9e81debb622ed13b61bb19e2bf0132bf9c3725aa9b30697d1dde5e13a16'
            '3a6b26e296606cc6a05eda370a68e5e6f93b77fc0fd8fb18e8c88d6f8110cf1a')

pkgver() {
  cd gcc
  echo "$(cat gcc/BASE-VER)+$(git describe --abbrev=12 --tags | sed 's/[^-]*-[^-]*-//;s/[^-]*-/r&/;s/-/+/g;s/_/./')"
}

prepare() {
  [[ ! -d gcc ]] && ln -s gcc-${pkgver/+/-} gcc
  cd gcc

  # Do not run fixincludes
  sed -i 's@\./fixinc\.sh@-c true@' gcc/Makefile.in

  sed -i "/ac_cpp=/s/\$CPPFLAGS/\$CPPFLAGS -O2/" {libiberty,gcc}/configure

  # Reproducible gcc-ada
  patch -Np0 < "$srcdir/gcc-ada-repro.patch"
  patch -Np1 < "$srcdir/config-Fix-rdynamic-detection-for-libcc1-usage.patch"
  patch -Np1 < "$srcdir/gcc-objc-include-lib-path-fix.patch"
  # ALARM lib32: Specify build host types, triplet patch
  #CONFIGFLAG="--host=armv7l-unknown-linux-gnueabihf --build=armv7l-unknown-linux-gnueabihf --with-arch=armv7-a --with-float=hard --with-fpu=neon"

  mkdir -p "$srcdir/gcc-build"
}

build() {
  ASMFLAGS+=" -ffile-prefix-map=${srcdir}=${DBGSRCDIR:-/usr/src/debug}"
  export ASMFLAGS
  local _confflags=(
      --prefix=/usr
      --program-prefix=armv7l-linux-gnueabihf-
      --with-as=/usr/bin/armv7l-linux-gnueabihf-as
      --with-ld=/usr/bin/armv7l-linux-gnueabihf-ld
      --with-native-system-header-dir=/usr/include32
      --libdir=/usr/lib32
      --includedir=/usr/include32
      --with-mpc-include=/usr/include32
      --with-mpc-lib=/usr/lib32
      --with-mpfr-include=/usr/include32
      --with-mpfr-lib=/usr/lib32
      --with-isl-include=/usr/include32
      --with-isl-lib=/usr/lib32
      --with-gmp-include=/usr/include32
      --with-gmp-lib=/usr/lib32
      --libexecdir=/usr/lib32
      --with-gxx-include-dir=/usr/include32/c++/${pkgver%+*}
      --with-bugurl=https://github.com/archlinuxarm-lib32/PKGBUILDs/issues
      --enable-languages=c,c++,fortran,lto,objc,obj-c++
      --with-system-isl
      --disable-nls
      --with-linker-hash-style=gnu
      --with-system-zlib
      --enable-clocale=gnu
      --disable-bootstrap
      --enable-__cxa_atexit
      --enable-checking=release
      --enable-default-pie
      --enable-default-ssp
      --enable-install-libiberty
      --enable-gnu-indirect-function
      --enable-gnu-unique-object
      --oldincludedir=/usr/include32
      --enable-libstdcxx-backtrace
      --enable-linker-build-id
      --enable-lto
      --enable-plugin
      --enable-shared
      --enable-threads=posix
      --disable-libssp
      --disable-libstdcxx-pch
      --disable-multilib
      --disable-werror
      --target=armv7l-linux-gnueabihf
      --host=armv7l-linux-gnueabihf
      --build=${CHOST}
      --enable-interwork
      --enable-addons
      --with-arch=armv7-a
      --with-float=hard
      --with-fpu=vfpv3-d16
  )

  cd gcc-build

  # Credits @allanmcrae
  # https://github.com/allanmcrae/toolchain/blob/f18604d70c5933c31b51a320978711e4e6791cf1/gcc/PKGBUILD
  # TODO: properly deal with the build issues resulting from this
  CFLAGS=${CFLAGS/-Werror=format-security/}
  CXXFLAGS=${CXXFLAGS/-Werror=format-security/}
  CFLAGS=${CFLAGS/-mno-omit-leaf-frame-pointer/}
  CXXFLAGS=${CXXFLAGS/-mno-omit-leaf-frame-pointer/}
  export OBJDUMP=armv7l-linux-gnueabihf-objdump
  export OBJDUMP_FOR_TARGET=armv7l-linux-gnueabihf-objdump
  export CC="armv7l-linux-gnueabihf-gcc -L/usr/lib32 -isysroot /"
  export CXX="armv7l-linux-gnueabihf-g++ -L/usr/lib32 -isysroot /"
  export PKG_CONFIG_PATH="/usr/lib32/pkgconfig"
  export LDFLAGS+=" -L/usr/lib32 -Wl,-rpath=/usr/lib32 -Wl,-rpath-link=/usr/lib32"
  "$srcdir/gcc/configure" \
    "${_confflags[@]:?_confflags unset}"

  # see https://bugs.archlinux.org/task/71777 for rationale re *FLAGS handling
  #make -O STAGE1_CFLAGS="-O2" \
  #        BOOT_CFLAGS="$CFLAGS" \
  #        BOOT_LDFLAGS="$LDFLAGS" \
  #        LDFLAGS_FOR_TARGET="$LDFLAGS" \
  #        bootstrap
  make
}

check() {
  cd gcc-build

  # disable libphobos test to avoid segfaults
  sed -i '/maybe-check-target-libphobos \\/d' Makefile

  # do not abort on error as some are "expected"
  make -O -k check || true
  "$srcdir/gcc/contrib/test_summary"
}

package_lib32-gcc-libs() {
  pkgdesc='Runtime libraries shipped by GCC'
  depends=('glibc>=2.27')
  options=(!emptydirs !strip)

  cd gcc-build
  make -C armv7l-linux-gnueabihf/libgcc DESTDIR="$pkgdir" install-shared
  rm -f "$pkgdir/$_libdir/libgcc_eh.a"

  for lib in libatomic \
             libgfortran \
             libgomp \
             libitm \
             libquadmath \
             libsanitizer/{a,l,ub}san \
             libstdc++-v3/src \
             libvtv; do
    make -C armv7l-linux-gnueabihf/$lib DESTDIR="$pkgdir" install-toolexeclibLTLIBRARIES
  done

  make -C armv7l-linux-gnueabihf/libobjc DESTDIR="$pkgdir" install-libs


  install -Dm644 "$srcdir/gcc/COPYING.RUNTIME" \
    "$pkgdir/usr/share/licenses/lib32-gcc-libs/RUNTIME.LIBRARY.EXCEPTION"

}

package_lib32-gcc() {
  pkgdesc="The GNU Compiler Collection - C and C++ frontends"
  depends=("lib32-gcc-libs=$pkgver-$pkgrel" 'lib32-binutils>=2.28' lib32-libmpc zstd)
  options=(!emptydirs staticlibs)

  cd gcc-build

  make -C gcc DESTDIR="$pkgdir" install-driver install-cpp install-gcc-ar \
    c++.install-common install-headers install-plugin install-lto-wrapper

  install -m755 -t "$pkgdir/${_libdir}/" gcc/{cc1,cc1plus,collect2,lto1}

  make -C armv7l-linux-gnueabihf/libgcc DESTDIR="$pkgdir" install
  rm -f "$pkgdir"/usr/lib32/libgcc_s.so*

  make -C armv7l-linux-gnueabihf/libstdc++-v3/src DESTDIR="$pkgdir" install
  make -C armv7l-linux-gnueabihf/libstdc++-v3/include DESTDIR="$pkgdir" install
  make -C armv7l-linux-gnueabihf/libstdc++-v3/libsupc++ DESTDIR="$pkgdir" install

  make DESTDIR="$pkgdir" install-libcc1
  rm "$pkgdir"/usr/lib32/libstdc++.so*

  make DESTDIR="$pkgdir" install-fixincludes
  make -C gcc DESTDIR="$pkgdir" install-mkheaders

  make -C lto-plugin DESTDIR="$pkgdir" install
  install -dm755 "$pkgdir"/usr/lib32/bfd-plugins/
  ln -s /${_libdir}/liblto_plugin.so \
    "$pkgdir/usr/lib32/bfd-plugins/"

  make -C armv7l-linux-gnueabihf/libgomp DESTDIR="$pkgdir" install-nodist_{libsubinclude,toolexeclib}HEADERS
  make -C armv7l-linux-gnueabihf/libitm DESTDIR="$pkgdir" install-nodist_toolexeclibHEADERS
  make -C armv7l-linux-gnueabihf/libquadmath DESTDIR="$pkgdir" install-nodist_libsubincludeHEADERS
  make -C armv7l-linux-gnueabihf/libsanitizer DESTDIR="$pkgdir" install-nodist_{saninclude,toolexeclib}HEADERS
  make -C armv7l-linux-gnueabihf/libsanitizer/asan DESTDIR="$pkgdir" install-nodist_toolexeclibHEADERS
  make -C armv7l-linux-gnueabihf/libsanitizer/lsan DESTDIR="$pkgdir" install-nodist_toolexeclibHEADERS

  make -C libcpp DESTDIR="$pkgdir" install
  for i in c++ \
           g++ \
           gcc \
           gcc-ar \
           gcc-nm \
           gcc-ranlib; do
    mv "$pkgdir"/usr/bin/armv7l-linux-gnueabihf-armv7l-linux-gnueabihf-${i} "$pkgdir"/usr/bin/armv7l-unknown-linux-gnueabihf-${i}
  done

  # Install Runtime Library Exception
  install -d "$pkgdir/usr/share/licenses/$pkgname/"
  ln -s /usr/share/licenses/lib32-gcc-libs/RUNTIME.LIBRARY.EXCEPTION \
    "$pkgdir/usr/share/licenses/$pkgname/"
}

package_lib32-gcc-fortran() {
  pkgdesc='Fortran front-end for GCC'
  depends=("lib32-gcc=$pkgver-$pkgrel")

  cd gcc-build
  make -C armv7l-linux-gnueabihf/libgfortran DESTDIR="$pkgdir" install-cafexeclibLTLIBRARIES \
    install-{toolexeclibDATA,nodist_fincludeHEADERS,gfor_cHEADERS}
  make -C armv7l-linux-gnueabihf/libgomp DESTDIR="$pkgdir" install-nodist_fincludeHEADERS
  make -C gcc DESTDIR="$pkgdir" fortran.install-common
  install -Dm755 gcc/f951 "$pkgdir/${_libdir}/f951"
  mv "$pkgdir/usr/bin/armv7l-linux-gnueabihf-armv7l-linux-gnueabihf-gfortran" "$pkgdir/usr/bin/armv7l-unknown-linux-gnueabihf-gfortran"

  # Install Runtime Library Exception
  install -d "$pkgdir/usr/share/licenses/$pkgname/"
  ln -s /usr/share/licenses/lib32-gcc-libs/RUNTIME.LIBRARY.EXCEPTION \
    "$pkgdir/usr/share/licenses/$pkgname/"
}

package_lib32-gcc-objc() {
  pkgdesc='Objective-C front-end for GCC'
  depends=("lib32-gcc=$pkgver-$pkgrel")

  cd gcc-build
  make DESTDIR="$pkgdir" -C armv7l-linux-gnueabihf/libobjc install-headers
  install -dm755 "$pkgdir/${_libdir}"
  install -m755 gcc/cc1obj{,plus} "$pkgdir/${_libdir}/"
  # Install Runtime Library Exception
  install -d "$pkgdir/usr/share/licenses/$pkgname/"
  ln -s /usr/share/licenses/lib32-gcc-libs/RUNTIME.LIBRARY.EXCEPTION \
    "$pkgdir/usr/share/licenses/$pkgname/"
}

package_lib32-gcc-go() {
  pkgdesc='Go front-end for GCC'
  depends=("lib32-gcc=$pkgver-$pkgrel")
  provides=("go=1.17")
  conflicts=(go)

  cd gcc-build
  make -C armv7l-linux-gnueabihf/libgo DESTDIR="$pkgdir" install-exec-am
  make DESTDIR="$pkgdir" install-gotools
  make -C gcc DESTDIR="$pkgdir" go.install-common

  rm -f "$pkgdir"/usr/lib32/libgo.so*
  install -Dm755 gcc/go1 "$pkgdir/${_libdir}/go1"

  # Install Runtime Library Exception
  install -d "$pkgdir/usr/share/licenses/$pkgname/"
  ln -s /usr/share/licenses/lib32-gcc-libs/RUNTIME.LIBRARY.EXCEPTION \
    "$pkgdir/usr/share/licenses/$pkgname/"
}

